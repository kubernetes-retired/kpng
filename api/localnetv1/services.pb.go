// Copyright 2021 The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/localnetv1/services.proto

package localnetv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Set int32

const (
	Set_UnknownSet          Set = 0
	Set_ServicesSet         Set = 1
	Set_EndpointsSet        Set = 2
	Set_GlobalServiceInfos  Set = 10
	Set_GlobalEndpointInfos Set = 11
	Set_GlobalNodeInfos     Set = 12
)

// Enum value maps for Set.
var (
	Set_name = map[int32]string{
		0:  "UnknownSet",
		1:  "ServicesSet",
		2:  "EndpointsSet",
		10: "GlobalServiceInfos",
		11: "GlobalEndpointInfos",
		12: "GlobalNodeInfos",
	}
	Set_value = map[string]int32{
		"UnknownSet":          0,
		"ServicesSet":         1,
		"EndpointsSet":        2,
		"GlobalServiceInfos":  10,
		"GlobalEndpointInfos": 11,
		"GlobalNodeInfos":     12,
	}
)

func (x Set) Enum() *Set {
	p := new(Set)
	*p = x
	return p
}

func (x Set) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Set) Descriptor() protoreflect.EnumDescriptor {
	return file_api_localnetv1_services_proto_enumTypes[0].Descriptor()
}

func (Set) Type() protoreflect.EnumType {
	return &file_api_localnetv1_services_proto_enumTypes[0]
}

func (x Set) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Set.Descriptor instead.
func (Set) EnumDescriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{0}
}

type Protocol int32

const (
	Protocol_UnknownProtocol Protocol = 0
	Protocol_TCP             Protocol = 1
	Protocol_UDP             Protocol = 2
	Protocol_SCTP            Protocol = 3
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "UnknownProtocol",
		1: "TCP",
		2: "UDP",
		3: "SCTP",
	}
	Protocol_value = map[string]int32{
		"UnknownProtocol": 0,
		"TCP":             1,
		"UDP":             2,
		"SCTP":            3,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_localnetv1_services_proto_enumTypes[1].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_api_localnetv1_services_proto_enumTypes[1]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{1}
}

type WatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NodeName of the requester
	NodeName string `protobuf:"bytes,1,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
}

func (x *WatchReq) Reset() {
	*x = WatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchReq) ProtoMessage() {}

func (x *WatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchReq.ProtoReflect.Descriptor instead.
func (*WatchReq) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{0}
}

func (x *WatchReq) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type OpItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//	*OpItem_Sync
	//	*OpItem_Reset_
	//	*OpItem_Set
	//	*OpItem_Delete
	Op isOpItem_Op `protobuf_oneof:"Op"`
}

func (x *OpItem) Reset() {
	*x = OpItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpItem) ProtoMessage() {}

func (x *OpItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpItem.ProtoReflect.Descriptor instead.
func (*OpItem) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{1}
}

func (m *OpItem) GetOp() isOpItem_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *OpItem) GetSync() *EmptyOp {
	if x, ok := x.GetOp().(*OpItem_Sync); ok {
		return x.Sync
	}
	return nil
}

func (x *OpItem) GetReset_() *EmptyOp {
	if x, ok := x.GetOp().(*OpItem_Reset_); ok {
		return x.Reset_
	}
	return nil
}

func (x *OpItem) GetSet() *Value {
	if x, ok := x.GetOp().(*OpItem_Set); ok {
		return x.Set
	}
	return nil
}

func (x *OpItem) GetDelete() *Ref {
	if x, ok := x.GetOp().(*OpItem_Delete); ok {
		return x.Delete
	}
	return nil
}

type isOpItem_Op interface {
	isOpItem_Op()
}

type OpItem_Sync struct {
	// Sync signals that the change set is complete (especially useful to know when the initial state is complete)
	Sync *EmptyOp `protobuf:"bytes,1,opt,name=Sync,proto3,oneof"`
}

type OpItem_Reset_ struct {
	// Reset signals that the whole data set will be sent next
	Reset_ *EmptyOp `protobuf:"bytes,4,opt,name=Reset,proto3,oneof"`
}

type OpItem_Set struct {
	// Add/update a value in a set
	Set *Value `protobuf:"bytes,2,opt,name=Set,proto3,oneof"`
}

type OpItem_Delete struct {
	// Delete a value in a set
	Delete *Ref `protobuf:"bytes,3,opt,name=Delete,proto3,oneof"`
}

func (*OpItem_Sync) isOpItem_Op() {}

func (*OpItem_Reset_) isOpItem_Op() {}

func (*OpItem_Set) isOpItem_Op() {}

func (*OpItem_Delete) isOpItem_Op() {}

type EmptyOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyOp) Reset() {
	*x = EmptyOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyOp) ProtoMessage() {}

func (x *EmptyOp) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyOp.ProtoReflect.Descriptor instead.
func (*EmptyOp) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{2}
}

type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set  Set    `protobuf:"varint,1,opt,name=Set,proto3,enum=localnetv1.Set" json:"Set,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{3}
}

func (x *Ref) GetSet() Set {
	if x != nil {
		return x.Set
	}
	return Set_UnknownSet
}

func (x *Ref) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref   *Ref   `protobuf:"bytes,1,opt,name=Ref,proto3" json:"Ref,omitempty"`
	Bytes []byte `protobuf:"bytes,2,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{4}
}

func (x *Value) GetRef() *Ref {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *Value) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Type        string            `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Labels      map[string]string `protobuf:"bytes,8,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,9,rep,name=Annotations,proto3" json:"Annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IPs         *ServiceIPs       `protobuf:"bytes,4,opt,name=IPs,proto3" json:"IPs,omitempty"`
	IPFilters   []*IPFilter       `protobuf:"bytes,10,rep,name=IPFilters,proto3" json:"IPFilters,omitempty"`
	// true if the service maps the whole IP, not just individual ports.
	MapIP bool `protobuf:"varint,5,opt,name=MapIP,proto3" json:"MapIP,omitempty"`
	// Individual ports mapped for the this service
	Ports                  []*PortMapping `protobuf:"bytes,6,rep,name=Ports,proto3" json:"Ports,omitempty"`
	ExternalTrafficToLocal bool           `protobuf:"varint,7,opt,name=ExternalTrafficToLocal,proto3" json:"ExternalTrafficToLocal,omitempty"`
	// Types that are assignable to SessionAffinity:
	//	*Service_ClientIP
	SessionAffinity        isService_SessionAffinity `protobuf_oneof:"SessionAffinity"`
	InternalTrafficToLocal bool                      `protobuf:"varint,12,opt,name=InternalTrafficToLocal,proto3" json:"InternalTrafficToLocal,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{5}
}

func (x *Service) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Service) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Service) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Service) GetIPs() *ServiceIPs {
	if x != nil {
		return x.IPs
	}
	return nil
}

func (x *Service) GetIPFilters() []*IPFilter {
	if x != nil {
		return x.IPFilters
	}
	return nil
}

func (x *Service) GetMapIP() bool {
	if x != nil {
		return x.MapIP
	}
	return false
}

func (x *Service) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Service) GetExternalTrafficToLocal() bool {
	if x != nil {
		return x.ExternalTrafficToLocal
	}
	return false
}

func (m *Service) GetSessionAffinity() isService_SessionAffinity {
	if m != nil {
		return m.SessionAffinity
	}
	return nil
}

func (x *Service) GetClientIP() *ClientIPAffinity {
	if x, ok := x.GetSessionAffinity().(*Service_ClientIP); ok {
		return x.ClientIP
	}
	return nil
}

func (x *Service) GetInternalTrafficToLocal() bool {
	if x != nil {
		return x.InternalTrafficToLocal
	}
	return false
}

type isService_SessionAffinity interface {
	isService_SessionAffinity()
}

type Service_ClientIP struct {
	ClientIP *ClientIPAffinity `protobuf:"bytes,11,opt,name=ClientIP,proto3,oneof"`
}

func (*Service_ClientIP) isService_SessionAffinity() {}

type IPFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TargetIPs are the destination IPs to match (before DNAT)
	TargetIPs *IPSet `protobuf:"bytes,1,opt,name=TargetIPs,proto3" json:"TargetIPs,omitempty"`
	// SourceRanges are the CIDRs of IPs that are allowed by this filter rule
	SourceRanges []string `protobuf:"bytes,2,rep,name=SourceRanges,proto3" json:"SourceRanges,omitempty"`
}

func (x *IPFilter) Reset() {
	*x = IPFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPFilter) ProtoMessage() {}

func (x *IPFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPFilter.ProtoReflect.Descriptor instead.
func (*IPFilter) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{6}
}

func (x *IPFilter) GetTargetIPs() *IPSet {
	if x != nil {
		return x.TargetIPs
	}
	return nil
}

func (x *IPFilter) GetSourceRanges() []string {
	if x != nil {
		return x.SourceRanges
	}
	return nil
}

type ServiceIPs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterIPs      *IPSet `protobuf:"bytes,1,opt,name=ClusterIPs,proto3" json:"ClusterIPs,omitempty"`
	ExternalIPs     *IPSet `protobuf:"bytes,2,opt,name=ExternalIPs,proto3" json:"ExternalIPs,omitempty"`
	LoadBalancerIPs *IPSet `protobuf:"bytes,4,opt,name=LoadBalancerIPs,proto3" json:"LoadBalancerIPs,omitempty"`
	Headless        bool   `protobuf:"varint,3,opt,name=Headless,proto3" json:"Headless,omitempty"`
}

func (x *ServiceIPs) Reset() {
	*x = ServiceIPs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceIPs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceIPs) ProtoMessage() {}

func (x *ServiceIPs) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceIPs.ProtoReflect.Descriptor instead.
func (*ServiceIPs) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceIPs) GetClusterIPs() *IPSet {
	if x != nil {
		return x.ClusterIPs
	}
	return nil
}

func (x *ServiceIPs) GetExternalIPs() *IPSet {
	if x != nil {
		return x.ExternalIPs
	}
	return nil
}

func (x *ServiceIPs) GetLoadBalancerIPs() *IPSet {
	if x != nil {
		return x.LoadBalancerIPs
	}
	return nil
}

func (x *ServiceIPs) GetHeadless() bool {
	if x != nil {
		return x.Headless
	}
	return false
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname      string          `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	IPs           *IPSet          `protobuf:"bytes,2,opt,name=IPs,proto3" json:"IPs,omitempty"`
	Local         bool            `protobuf:"varint,3,opt,name=Local,proto3" json:"Local,omitempty"`
	PortOverrides []*PortName     `protobuf:"bytes,4,rep,name=PortOverrides,proto3" json:"PortOverrides,omitempty"`
	Scopes        *EndpointScopes `protobuf:"bytes,5,opt,name=Scopes,proto3" json:"Scopes,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{8}
}

func (x *Endpoint) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Endpoint) GetIPs() *IPSet {
	if x != nil {
		return x.IPs
	}
	return nil
}

func (x *Endpoint) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *Endpoint) GetPortOverrides() []*PortName {
	if x != nil {
		return x.PortOverrides
	}
	return nil
}

func (x *Endpoint) GetScopes() *EndpointScopes {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type EndpointScopes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Internal bool `protobuf:"varint,1,opt,name=Internal,proto3" json:"Internal,omitempty"`
	External bool `protobuf:"varint,2,opt,name=External,proto3" json:"External,omitempty"`
}

func (x *EndpointScopes) Reset() {
	*x = EndpointScopes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointScopes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointScopes) ProtoMessage() {}

func (x *EndpointScopes) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointScopes.ProtoReflect.Descriptor instead.
func (*EndpointScopes) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{9}
}

func (x *EndpointScopes) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *EndpointScopes) GetExternal() bool {
	if x != nil {
		return x.External
	}
	return false
}

type IPSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V4 []string `protobuf:"bytes,1,rep,name=V4,proto3" json:"V4,omitempty"`
	V6 []string `protobuf:"bytes,2,rep,name=V6,proto3" json:"V6,omitempty"`
}

func (x *IPSet) Reset() {
	*x = IPSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPSet) ProtoMessage() {}

func (x *IPSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPSet.ProtoReflect.Descriptor instead.
func (*IPSet) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{10}
}

func (x *IPSet) GetV4() []string {
	if x != nil {
		return x.V4
	}
	return nil
}

func (x *IPSet) GetV6() []string {
	if x != nil {
		return x.V6
	}
	return nil
}

type PortName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *PortName) Reset() {
	*x = PortName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortName) ProtoMessage() {}

func (x *PortName) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortName.ProtoReflect.Descriptor instead.
func (*PortName) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{11}
}

func (x *PortName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortName) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PortMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Protocol       Protocol `protobuf:"varint,2,opt,name=Protocol,proto3,enum=localnetv1.Protocol" json:"Protocol,omitempty"`
	Port           int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	NodePort       int32    `protobuf:"varint,4,opt,name=NodePort,proto3" json:"NodePort,omitempty"`
	TargetPort     int32    `protobuf:"varint,5,opt,name=TargetPort,proto3" json:"TargetPort,omitempty"`
	TargetPortName string   `protobuf:"bytes,6,opt,name=TargetPortName,proto3" json:"TargetPortName,omitempty"`
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{12}
}

func (x *PortMapping) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortMapping) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_UnknownProtocol
}

func (x *PortMapping) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PortMapping) GetNodePort() int32 {
	if x != nil {
		return x.NodePort
	}
	return 0
}

func (x *PortMapping) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

func (x *PortMapping) GetTargetPortName() string {
	if x != nil {
		return x.TargetPortName
	}
	return ""
}

type ClientIPAffinity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeoutSeconds int32 `protobuf:"varint,1,opt,name=TimeoutSeconds,proto3" json:"TimeoutSeconds,omitempty"`
}

func (x *ClientIPAffinity) Reset() {
	*x = ClientIPAffinity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientIPAffinity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIPAffinity) ProtoMessage() {}

func (x *ClientIPAffinity) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIPAffinity.ProtoReflect.Descriptor instead.
func (*ClientIPAffinity) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{13}
}

func (x *ClientIPAffinity) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash    uint64   `protobuf:"varint,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Service *Service `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{14}
}

func (x *ServiceInfo) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *ServiceInfo) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type EndpointInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash        uint64              `protobuf:"varint,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Namespace   string              `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	SourceName  string              `protobuf:"bytes,3,opt,name=SourceName,proto3" json:"SourceName,omitempty"`
	ServiceName string              `protobuf:"bytes,4,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	PodName     string              `protobuf:"bytes,8,opt,name=PodName,proto3" json:"PodName,omitempty"`
	Endpoint    *Endpoint           `protobuf:"bytes,6,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	Conditions  *EndpointConditions `protobuf:"bytes,7,opt,name=Conditions,proto3" json:"Conditions,omitempty"`
	Topology    *TopologyInfo       `protobuf:"bytes,9,opt,name=Topology,proto3" json:"Topology,omitempty"`
	Hints       *TopologyHints      `protobuf:"bytes,10,opt,name=Hints,proto3" json:"Hints,omitempty"`
}

func (x *EndpointInfo) Reset() {
	*x = EndpointInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointInfo) ProtoMessage() {}

func (x *EndpointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointInfo.ProtoReflect.Descriptor instead.
func (*EndpointInfo) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{15}
}

func (x *EndpointInfo) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *EndpointInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EndpointInfo) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *EndpointInfo) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *EndpointInfo) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *EndpointInfo) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *EndpointInfo) GetConditions() *EndpointConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *EndpointInfo) GetTopology() *TopologyInfo {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *EndpointInfo) GetHints() *TopologyHints {
	if x != nil {
		return x.Hints
	}
	return nil
}

type EndpointConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=Ready,proto3" json:"Ready,omitempty"`
}

func (x *EndpointConditions) Reset() {
	*x = EndpointConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointConditions) ProtoMessage() {}

func (x *EndpointConditions) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointConditions.ProtoReflect.Descriptor instead.
func (*EndpointConditions) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{16}
}

func (x *EndpointConditions) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type TopologyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node string `protobuf:"bytes,1,opt,name=Node,proto3" json:"Node,omitempty"`
	Zone string `protobuf:"bytes,2,opt,name=Zone,proto3" json:"Zone,omitempty"`
}

func (x *TopologyInfo) Reset() {
	*x = TopologyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyInfo) ProtoMessage() {}

func (x *TopologyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyInfo.ProtoReflect.Descriptor instead.
func (*TopologyInfo) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{17}
}

func (x *TopologyInfo) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *TopologyInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type TopologyHints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zones []string `protobuf:"bytes,1,rep,name=Zones,proto3" json:"Zones,omitempty"`
}

func (x *TopologyHints) Reset() {
	*x = TopologyHints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyHints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyHints) ProtoMessage() {}

func (x *TopologyHints) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyHints.ProtoReflect.Descriptor instead.
func (*TopologyHints) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{18}
}

func (x *TopologyHints) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash uint64 `protobuf:"varint,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Node *Node  `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{19}
}

func (x *NodeInfo) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *NodeInfo) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Topology    *TopologyInfo     `protobuf:"bytes,4,opt,name=Topology,proto3" json:"Topology,omitempty"`
	Labels      map[string]string `protobuf:"bytes,2,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=Annotations,proto3" json:"Annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{20}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetTopology() *TopologyInfo {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *Node) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Node) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type GlobalWatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GlobalWatchReq) Reset() {
	*x = GlobalWatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_localnetv1_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalWatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalWatchReq) ProtoMessage() {}

func (x *GlobalWatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_localnetv1_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalWatchReq.ProtoReflect.Descriptor instead.
func (*GlobalWatchReq) Descriptor() ([]byte, []int) {
	return file_api_localnetv1_services_proto_rawDescGZIP(), []int{21}
}

var File_api_localnetv1_services_proto protoreflect.FileDescriptor

var file_api_localnetv1_services_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x22, 0x26, 0x0a, 0x08, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x06, 0x4f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x29,
	0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4f,
	0x70, 0x48, 0x00, 0x52, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2b, 0x0a, 0x05, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4f, 0x70, 0x48, 0x00, 0x52,
	0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x53, 0x65, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x4f, 0x70, 0x22, 0x09,
	0x0a, 0x07, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4f, 0x70, 0x22, 0x3c, 0x0a, 0x03, 0x52, 0x65, 0x66,
	0x12, 0x21, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x03,
	0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x40, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x52, 0x03,
	0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xad, 0x05, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x03,
	0x49, 0x50, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50,
	0x73, 0x52, 0x03, 0x49, 0x50, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x49, 0x50, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x09, 0x49, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x50,
	0x12, 0x2d, 0x0a, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x36, 0x0a, 0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x50, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x50, 0x12, 0x36, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x5f, 0x0a, 0x08, 0x49, 0x50, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x50, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x53, 0x65, 0x74, 0x52, 0x09, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x50, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x50, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x53, 0x65, 0x74,
	0x52, 0x0a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x73, 0x12, 0x33, 0x0a, 0x0b,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49,
	0x50, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50,
	0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x49, 0x50, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49, 0x50, 0x53, 0x65, 0x74, 0x52, 0x0f, 0x4c,
	0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x50, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x49, 0x50, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x49, 0x50,
	0x53, 0x65, 0x74, 0x52, 0x03, 0x49, 0x50, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x3a,
	0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x50, 0x6f, 0x72,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x52, 0x06, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x48,
	0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x05, 0x49, 0x50, 0x53, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x56, 0x34, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x56,
	0x34, 0x12, 0x0e, 0x0a, 0x02, 0x56, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x56,
	0x36, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x41,
	0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22,
	0x50, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x2d, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0xfb, 0x02, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65,
	0x74, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e,
	0x65, 0x74, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x48, 0x69, 0x6e,
	0x74, 0x73, 0x52, 0x05, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22,
	0x2a, 0x0a, 0x12, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x36, 0x0a, 0x0c, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x5a,
	0x6f, 0x6e, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x48,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x08, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x22, 0xc6, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x2a, 0x7e, 0x0a, 0x03, 0x53,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x74,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65,
	0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x53, 0x65, 0x74, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x10, 0x0a, 0x12, 0x17, 0x0a,
	0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x10, 0x0c, 0x2a, 0x3b, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x43, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x43, 0x54, 0x50, 0x10, 0x03, 0x32, 0x42, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x28, 0x01, 0x30, 0x01, 0x32, 0x45, 0x0a, 0x06,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1a, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x2c, 0x5a, 0x2a, 0x73, 0x69, 0x67, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2f, 0x6b, 0x70, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x6e, 0x65, 0x74, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_localnetv1_services_proto_rawDescOnce sync.Once
	file_api_localnetv1_services_proto_rawDescData = file_api_localnetv1_services_proto_rawDesc
)

func file_api_localnetv1_services_proto_rawDescGZIP() []byte {
	file_api_localnetv1_services_proto_rawDescOnce.Do(func() {
		file_api_localnetv1_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_localnetv1_services_proto_rawDescData)
	})
	return file_api_localnetv1_services_proto_rawDescData
}

var file_api_localnetv1_services_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_localnetv1_services_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_localnetv1_services_proto_goTypes = []interface{}{
	(Set)(0),                   // 0: localnetv1.Set
	(Protocol)(0),              // 1: localnetv1.Protocol
	(*WatchReq)(nil),           // 2: localnetv1.WatchReq
	(*OpItem)(nil),             // 3: localnetv1.OpItem
	(*EmptyOp)(nil),            // 4: localnetv1.EmptyOp
	(*Ref)(nil),                // 5: localnetv1.Ref
	(*Value)(nil),              // 6: localnetv1.Value
	(*Service)(nil),            // 7: localnetv1.Service
	(*IPFilter)(nil),           // 8: localnetv1.IPFilter
	(*ServiceIPs)(nil),         // 9: localnetv1.ServiceIPs
	(*Endpoint)(nil),           // 10: localnetv1.Endpoint
	(*EndpointScopes)(nil),     // 11: localnetv1.EndpointScopes
	(*IPSet)(nil),              // 12: localnetv1.IPSet
	(*PortName)(nil),           // 13: localnetv1.PortName
	(*PortMapping)(nil),        // 14: localnetv1.PortMapping
	(*ClientIPAffinity)(nil),   // 15: localnetv1.ClientIPAffinity
	(*ServiceInfo)(nil),        // 16: localnetv1.ServiceInfo
	(*EndpointInfo)(nil),       // 17: localnetv1.EndpointInfo
	(*EndpointConditions)(nil), // 18: localnetv1.EndpointConditions
	(*TopologyInfo)(nil),       // 19: localnetv1.TopologyInfo
	(*TopologyHints)(nil),      // 20: localnetv1.TopologyHints
	(*NodeInfo)(nil),           // 21: localnetv1.NodeInfo
	(*Node)(nil),               // 22: localnetv1.Node
	(*GlobalWatchReq)(nil),     // 23: localnetv1.GlobalWatchReq
	nil,                        // 24: localnetv1.Service.LabelsEntry
	nil,                        // 25: localnetv1.Service.AnnotationsEntry
	nil,                        // 26: localnetv1.Node.LabelsEntry
	nil,                        // 27: localnetv1.Node.AnnotationsEntry
}
var file_api_localnetv1_services_proto_depIdxs = []int32{
	4,  // 0: localnetv1.OpItem.Sync:type_name -> localnetv1.EmptyOp
	4,  // 1: localnetv1.OpItem.Reset:type_name -> localnetv1.EmptyOp
	6,  // 2: localnetv1.OpItem.Set:type_name -> localnetv1.Value
	5,  // 3: localnetv1.OpItem.Delete:type_name -> localnetv1.Ref
	0,  // 4: localnetv1.Ref.Set:type_name -> localnetv1.Set
	5,  // 5: localnetv1.Value.Ref:type_name -> localnetv1.Ref
	24, // 6: localnetv1.Service.Labels:type_name -> localnetv1.Service.LabelsEntry
	25, // 7: localnetv1.Service.Annotations:type_name -> localnetv1.Service.AnnotationsEntry
	9,  // 8: localnetv1.Service.IPs:type_name -> localnetv1.ServiceIPs
	8,  // 9: localnetv1.Service.IPFilters:type_name -> localnetv1.IPFilter
	14, // 10: localnetv1.Service.Ports:type_name -> localnetv1.PortMapping
	15, // 11: localnetv1.Service.ClientIP:type_name -> localnetv1.ClientIPAffinity
	12, // 12: localnetv1.IPFilter.TargetIPs:type_name -> localnetv1.IPSet
	12, // 13: localnetv1.ServiceIPs.ClusterIPs:type_name -> localnetv1.IPSet
	12, // 14: localnetv1.ServiceIPs.ExternalIPs:type_name -> localnetv1.IPSet
	12, // 15: localnetv1.ServiceIPs.LoadBalancerIPs:type_name -> localnetv1.IPSet
	12, // 16: localnetv1.Endpoint.IPs:type_name -> localnetv1.IPSet
	13, // 17: localnetv1.Endpoint.PortOverrides:type_name -> localnetv1.PortName
	11, // 18: localnetv1.Endpoint.Scopes:type_name -> localnetv1.EndpointScopes
	1,  // 19: localnetv1.PortMapping.Protocol:type_name -> localnetv1.Protocol
	7,  // 20: localnetv1.ServiceInfo.Service:type_name -> localnetv1.Service
	10, // 21: localnetv1.EndpointInfo.Endpoint:type_name -> localnetv1.Endpoint
	18, // 22: localnetv1.EndpointInfo.Conditions:type_name -> localnetv1.EndpointConditions
	19, // 23: localnetv1.EndpointInfo.Topology:type_name -> localnetv1.TopologyInfo
	20, // 24: localnetv1.EndpointInfo.Hints:type_name -> localnetv1.TopologyHints
	22, // 25: localnetv1.NodeInfo.Node:type_name -> localnetv1.Node
	19, // 26: localnetv1.Node.Topology:type_name -> localnetv1.TopologyInfo
	26, // 27: localnetv1.Node.Labels:type_name -> localnetv1.Node.LabelsEntry
	27, // 28: localnetv1.Node.Annotations:type_name -> localnetv1.Node.AnnotationsEntry
	2,  // 29: localnetv1.Endpoints.Watch:input_type -> localnetv1.WatchReq
	23, // 30: localnetv1.Global.Watch:input_type -> localnetv1.GlobalWatchReq
	3,  // 31: localnetv1.Endpoints.Watch:output_type -> localnetv1.OpItem
	3,  // 32: localnetv1.Global.Watch:output_type -> localnetv1.OpItem
	31, // [31:33] is the sub-list for method output_type
	29, // [29:31] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_api_localnetv1_services_proto_init() }
func file_api_localnetv1_services_proto_init() {
	if File_api_localnetv1_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_localnetv1_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceIPs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointScopes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientIPAffinity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyHints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_localnetv1_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalWatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_localnetv1_services_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*OpItem_Sync)(nil),
		(*OpItem_Reset_)(nil),
		(*OpItem_Set)(nil),
		(*OpItem_Delete)(nil),
	}
	file_api_localnetv1_services_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Service_ClientIP)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_localnetv1_services_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_localnetv1_services_proto_goTypes,
		DependencyIndexes: file_api_localnetv1_services_proto_depIdxs,
		EnumInfos:         file_api_localnetv1_services_proto_enumTypes,
		MessageInfos:      file_api_localnetv1_services_proto_msgTypes,
	}.Build()
	File_api_localnetv1_services_proto = out.File
	file_api_localnetv1_services_proto_rawDesc = nil
	file_api_localnetv1_services_proto_goTypes = nil
	file_api_localnetv1_services_proto_depIdxs = nil
}
